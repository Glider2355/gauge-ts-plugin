{
  parserClass="gauge.parser.SpecParser"

  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

  psiClassPrefix="Spec"
  psiImplClassSuffix="Impl"
  psiPackage="gauge.language.psi"
  psiImplPackage="gauge.language.psi.impl"

  elementTypeHolderClass="gauge.language.token.SpecTokenTypes"
  elementTypeClass="gauge.language.token.SpecElementType"
  tokenTypeClass="gauge.language.token.SpecTokenType"

  psiImplUtilClass="gauge.language.psi.SpecPsiImplUtil"
}

specFile ::= (comment)* specDetail scenario* teardown?
specDetail ::= specHeading (comment | tags | keyword | table)* (step|comment)*
scenario ::= (comment)* scenarioHeading (comment)* tags? (comment)* (step | comment)*
teardown ::=  TEARDOWN_IDENTIFIER (comment)* (step | comment | TEARDOWN_IDENTIFIER)*
private comment ::= COMMENT
private specComment ::= SPEC_COMMENT
private specHeading ::= SPEC_HEADING
private scenarioHeading ::= SCENARIO_HEADING
step ::= STEP_IDENTIFIER (arg|STEP)+ (comment)* table?    {mixin="gauge.language.psi.impl.SpecNamedElementImpl"
                                   implements="gauge.language.psi.SpecNamedElement" methods = [getStepValue]}
arg ::= dynamicArg | staticArg
dynamicArg ::= DYNAMIC_ARG_START DYNAMIC_ARG DYNAMIC_ARG_END
staticArg ::= ARG_START ARG? ARG_END
tags ::= TAGS
keyword ::= KEYWORD
table ::= tableHeader tableBody
tableHeader ::= TABLE_BORDER (TABLE_HEADER* TABLE_BORDER)+ NEW_LINE ((TABLE_BORDER)* NEW_LINE)?
tableBody ::=(TABLE_BORDER (WHITESPACE* tableRowValue? WHITESPACE* TABLE_BORDER)+ NEW_LINE?)*
tableRowValue ::= TABLE_ROW_VALUE+ | (DYNAMIC_ARG_START DYNAMIC_ARG+ DYNAMIC_ARG_END WHITESPACE* TABLE_ROW_VALUE* WHITESPACE*)+
